#############################################################################
# Makefile for building: CellCounter
# Generated by qmake (2.01a) (Qt 4.8.2) on: Sun Jun 3 23:22:06 2012
# Project:  CellCounter.pro
# Template: app
# Command: /usr/bin/qmake -config release -o Makefile CellCounter.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib /usr/lib/libopencv_core.so /usr/lib/libopencv_highgui.so /usr/lib/libopencv_imgproc.so /usr/lib/libopencv_legacy.so -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		csopencv.cpp \
		csmorphology.cpp \
		csthreshold.cpp \
		csparameter.cpp \
		cellcounter.cpp moc_cellcounter.cpp \
		qrc_icon.cpp
OBJECTS       = main.o \
		csopencv.o \
		csmorphology.o \
		csthreshold.o \
		csparameter.o \
		cellcounter.o \
		moc_cellcounter.o \
		qrc_icon.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		CellCounter.pro
QMAKE_TARGET  = CellCounter
DESTDIR       = 
TARGET        = CellCounter

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_cellcounter.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: CellCounter.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -config release -o Makefile CellCounter.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -config release -o Makefile CellCounter.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/CellCounter1.0.0 || $(MKDIR) .tmp/CellCounter1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/CellCounter1.0.0/ && $(COPY_FILE) --parents csopencv.h csmorphology.h csthreshold.h csparameter.h cellcounter.h .tmp/CellCounter1.0.0/ && $(COPY_FILE) --parents icon.qrc .tmp/CellCounter1.0.0/ && $(COPY_FILE) --parents main.cpp csopencv.cpp csmorphology.cpp csthreshold.cpp csparameter.cpp cellcounter.cpp .tmp/CellCounter1.0.0/ && $(COPY_FILE) --parents cellcounter.ui .tmp/CellCounter1.0.0/ && (cd `dirname .tmp/CellCounter1.0.0` && $(TAR) CellCounter1.0.0.tar CellCounter1.0.0 && $(COMPRESS) CellCounter1.0.0.tar) && $(MOVE) `dirname .tmp/CellCounter1.0.0`/CellCounter1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/CellCounter1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_cellcounter.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_cellcounter.cpp
moc_cellcounter.cpp: csopencv.h \
		csmorphology.h \
		csthreshold.h \
		csparameter.h \
		cellcounter.h
	/usr/bin/moc $(DEFINES) $(INCPATH) cellcounter.h -o moc_cellcounter.cpp

compiler_rcc_make_all: qrc_icon.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_icon.cpp
qrc_icon.cpp: icon.qrc \
		1.jpg
	/usr/bin/rcc -name icon icon.qrc -o qrc_icon.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_cellcounter.h
compiler_uic_clean:
	-$(DEL_FILE) ui_cellcounter.h
ui_cellcounter.h: cellcounter.ui
	/usr/bin/uic cellcounter.ui -o ui_cellcounter.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp cellcounter.h \
		csopencv.h \
		csmorphology.h \
		csthreshold.h \
		csparameter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

csopencv.o: csopencv.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o csopencv.o csopencv.cpp

csmorphology.o: csmorphology.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o csmorphology.o csmorphology.cpp

csthreshold.o: csthreshold.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o csthreshold.o csthreshold.cpp

csparameter.o: csparameter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o csparameter.o csparameter.cpp

cellcounter.o: cellcounter.cpp csopencv.h \
		csmorphology.h \
		csthreshold.h \
		csparameter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cellcounter.o cellcounter.cpp

moc_cellcounter.o: moc_cellcounter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cellcounter.o moc_cellcounter.cpp

qrc_icon.o: qrc_icon.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_icon.o qrc_icon.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

